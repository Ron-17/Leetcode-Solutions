#include <bits/stdc++.h> 
int solve(int len,int index,vector<int>&heights,vector<int>&dp)
{
    if(index>=len-1)
    {
        return 0;
    }
    if(dp[index]!=-1)
      return dp[index];
    int second=INT_MAX;
    int first=INT_MAX;
    if(index+1<=len-1)
      first = solve(len, index + 1, heights, dp) +
                  abs(heights[index + 1] - heights[index]);
    if(index+2<=len-1)
       second = solve(len, index + 2, heights, dp) +
                   abs(heights[index + 2] - heights[index]);
    return dp[index]=min(first,second);
}
int frogJump(int n, vector<int> &heights)
{
    // Write your code here.
    int index=0;
    int len=heights.size();
    vector<int>dp(len+1,-1);
    return solve(len,index,heights,dp);
}