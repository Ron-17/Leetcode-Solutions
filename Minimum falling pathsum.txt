class Solution {
public:
    int solve(vector<vector<int>>& matrix,int m,int n,int i,int j,vector<vector<int>>& dp)
    {
        if(j<0 || j>n-1)
          return 1e9;
        if(i==0)
          return matrix[0][j];
        if(dp[i][j]!=-1)
          return dp[i][j];
        int a=matrix[i][j]+solve(matrix,m,n,i-1,j,dp);
        int b=matrix[i][j]+solve(matrix,m,n,i-1,j-1,dp);
        int c=matrix[i][j]+solve(matrix,m,n,i-1,j+1,dp);
        int mini=min(a,min(b,c));
        return dp[i][j]=mini;
    }
    int minFallingPathSum(vector<vector<int>>& matrix) {
        int m=matrix.size();
        int n=matrix[0].size();
        vector<vector<int>>dp(m,vector<int>(n,-1));
        int i=m-1;
        int j=0;
       int mini = INT_MAX;
    
    for(int j=0; j<m;j++){
        int ans = solve(matrix,m,n,m-1,j,dp);
        mini = min(mini,ans);
    }
    
    return mini;
    }
};